{"remainingRequest":"/Users/Mac/Downloads/Omeclone/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Mac/Downloads/Omeclone/src/components/Input.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Mac/Downloads/Omeclone/src/components/Input.vue","mtime":1570804640000},{"path":"/Users/Mac/Downloads/Omeclone/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Mac/Downloads/Omeclone/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Mac/Downloads/Omeclone/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Mac/Downloads/Omeclone/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport InputToolbar from './Toolbar'\nimport { mapState, mapMutations } from 'vuex'\n\nexport default {\n  name: 'chat-input',\n\n  components: {\n    InputToolbar\n  },\n\n  computed: mapState(['socket', 'connectionState']),\n\n  methods: {\n    ...mapMutations(['addMessage']),\n\n    handleInput (event) {\n      if (!event.shiftKey && event.key === 'Enter') {\n        event.preventDefault()\n        this.sendMessage()\n      }\n    },\n\n    addEmoji (emoji) {\n      let textarea = this.$refs.textarea\n      let value = textarea.value\n      let start = textarea.selectionStart\n      let end = textarea.selectionEnd\n\n      textarea.value = value.slice(0, start) + emoji + value.slice(end)\n      textarea.setSelectionRange(start + 2, start + 2) // emoji takes up two code units\n      textarea.focus()\n    },\n\n    sendMessage (event) {\n      let textarea = this.$refs.textarea\n      let text = textarea.value\n\n      if (text) {\n        this.addMessage({ text, role: 'you' })\n        textarea.value = ''\n        if (this.connectionState === 'open') {\n          this.socket.emit('message', { text, role: 'partner' })\n        }\n      }\n    }\n  }\n}\n",{"version":3,"sources":["Input.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Input.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"input\" class=\"flex\">\n    <div class=\"input-area\">\n      <input-toolbar @addEmoji=\"addEmoji\"></input-toolbar>\n      <textarea class=\"textarea\" ref=\"textarea\" @keypress.stop=\"handleInput\"></textarea>\n    </div>\n\n    <div class=\"action-area\">\n      <button type=\"button\" class=\"send\" @click=\"sendMessage\">Send</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport InputToolbar from './Toolbar'\nimport { mapState, mapMutations } from 'vuex'\n\nexport default {\n  name: 'chat-input',\n\n  components: {\n    InputToolbar\n  },\n\n  computed: mapState(['socket', 'connectionState']),\n\n  methods: {\n    ...mapMutations(['addMessage']),\n\n    handleInput (event) {\n      if (!event.shiftKey && event.key === 'Enter') {\n        event.preventDefault()\n        this.sendMessage()\n      }\n    },\n\n    addEmoji (emoji) {\n      let textarea = this.$refs.textarea\n      let value = textarea.value\n      let start = textarea.selectionStart\n      let end = textarea.selectionEnd\n\n      textarea.value = value.slice(0, start) + emoji + value.slice(end)\n      textarea.setSelectionRange(start + 2, start + 2) // emoji takes up two code units\n      textarea.focus()\n    },\n\n    sendMessage (event) {\n      let textarea = this.$refs.textarea\n      let text = textarea.value\n\n      if (text) {\n        this.addMessage({ text, role: 'you' })\n        textarea.value = ''\n        if (this.connectionState === 'open') {\n          this.socket.emit('message', { text, role: 'partner' })\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n#input {\n  border-top: 1px solid #ddd;\n  flex: 1 0 auto;\n\n  .input-area {\n    flex: 1 1 auto;\n    padding: 5px 20px;\n\n    .textarea {\n      width: 100%;\n      height: 60px;\n      resize: none;\n      border: none;\n      padding: 0;\n      outline: none;\n      font-size: 1rem;\n    }\n  }\n\n  .action-area {\n    border-left: 1px solid #ddd;\n\n    .send {\n      width: 80px;\n\n      &:hover {\n        background-color: #f5f5f5;\n      }\n\n      &:active {\n        background-color: #eeeeee;\n      }\n    }\n  }\n}\n</style>\n"]}]}