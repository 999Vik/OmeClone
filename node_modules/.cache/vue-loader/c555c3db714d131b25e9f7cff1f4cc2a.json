{"remainingRequest":"/Users/Mac/Downloads/Omeclone/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Mac/Downloads/Omeclone/src/components/Toolbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Mac/Downloads/Omeclone/src/components/Toolbar.vue","mtime":1570804640000},{"path":"/Users/Mac/Downloads/Omeclone/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Mac/Downloads/Omeclone/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Mac/Downloads/Omeclone/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Mac/Downloads/Omeclone/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapMutations } from 'vuex'\nimport ToolbarEmoji from './Emoji'\n\nexport default {\n  name: 'toolbar',\n\n  components: {\n    ToolbarEmoji\n  },\n\n  data () {\n    return {\n      isEmojiShown: false\n    }\n  },\n\n  computed: {\n    ...mapState(['isCanvasShown'])\n  },\n\n  methods: {\n    ...mapMutations(['toggleCanvas']),\n\n    toggleEmoji (event) {\n      this.isEmojiShown = !this.isEmojiShown\n    },\n\n    addEmoji (emoji) {\n      this.$emit('addEmoji', emoji)\n    }\n  }\n}\n",{"version":3,"sources":["Toolbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Toolbar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"tool-bar\">\n    <ul>\n      <li class=\"tool-bar-item emoji\">\n        <i class=\"fas fa-laugh\" :class=\"{active: isEmojiShown}\" @click=\"toggleEmoji\"></i>\n        <toolbar-emoji @addEmoji=\"addEmoji\" v-show=\"isEmojiShown\"></toolbar-emoji>\n      </li>\n\n      <li class=\"tool-bar-item canvas\">\n        <i class=\"fas fa-edit\" :class=\"{active: isCanvasShown}\" @click=\"toggleCanvas\"></i>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex'\nimport ToolbarEmoji from './Emoji'\n\nexport default {\n  name: 'toolbar',\n\n  components: {\n    ToolbarEmoji\n  },\n\n  data () {\n    return {\n      isEmojiShown: false\n    }\n  },\n\n  computed: {\n    ...mapState(['isCanvasShown'])\n  },\n\n  methods: {\n    ...mapMutations(['toggleCanvas']),\n\n    toggleEmoji (event) {\n      this.isEmojiShown = !this.isEmojiShown\n    },\n\n    addEmoji (emoji) {\n      this.$emit('addEmoji', emoji)\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n#tool-bar {\n  margin-bottom: 10px;\n  font-size: 24px;\n\n  .tool-bar-item {\n    display: inline-block;\n    margin-right: 20px;\n    position: relative;\n\n    .fas {\n      color: #767676;\n      font-size: 20px;\n\n      &.active {\n        color: #333;\n      }\n    }\n  }\n}\n</style>\n"]}]}