{"remainingRequest":"/Users/Mac/Downloads/Omeclone/node_modules/babel-loader/lib/index.js!/Users/Mac/Downloads/Omeclone/node_modules/eslint-loader/index.js??ref--13-0!/Users/Mac/Downloads/Omeclone/src/store/plugins.js","dependencies":[{"path":"/Users/Mac/Downloads/Omeclone/src/store/plugins.js","mtime":1570804640000},{"path":"/Users/Mac/Downloads/Omeclone/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Mac/Downloads/Omeclone/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Mac/Downloads/Omeclone/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport createLogger from 'vuex/dist/logger';\nimport rootState from \"./state\";\nimport util from \"../util\";\n/**\n * Signaling messages: these messages are used to trade WebRTC\n * signaling information during negotiations leading up to a video call.\n */\n\n/* A new ICE candidate has been received */\n\nfunction handleNewIceCandidate(msg, dispatch) {\n  dispatch('addIceCandidate', msg).catch(function (err) {\n    return util.trace(\"Error \".concat(err.name, \": \").concat(err.message));\n  });\n}\n/* Invitation and offer to chat */\n\n\nfunction handleVideoOffer(msg, dispatch) {\n  dispatch('setRemoteDescription', msg).then(function () {\n    return dispatch('createAnswer');\n  }).then(function (answer) {\n    return dispatch('setLocalDescription', answer);\n  }).then(function () {\n    return dispatch('sendAnswerToPeer');\n  }).catch(function (err) {\n    return util.trace(\"Error \".concat(err.name, \": \").concat(err.message));\n  });\n}\n/* Callee has answered our offer */\n\n\nfunction handleVideoAnswer(msg, dispatch) {\n  dispatch('setRemoteDescription', msg).catch(function (err) {\n    return util.trace(\"Error \".concat(err.name, \": \").concat(err.message));\n  });\n}\n/* The other peer has hung up the call */\n\n\nfunction handleHangUp(state, commit) {\n  commit('closePeerConnection');\n  commit('createPeerConnection');\n  commit('addLocalStream', state.localStream);\n}\n/* A remote peer has been found and matched */\n\n\nfunction handlePeerMatched(dispatch) {\n  dispatch('createOffer').then(function (offer) {\n    return dispatch('setLocalDescription', offer);\n  }).then(function () {\n    return dispatch('sendOfferToPeer');\n  }).catch(function (err) {\n    return util.trace(\"Error \".concat(err.name, \": \").concat(err.message));\n  });\n}\n/**\n * Chatting messages: these messages are used to communicate with the remote peer.\n */\n\n\nfunction handleMessage(msg, commit) {\n  commit('addMessage', msg);\n}\n\nfunction handleCanvas(msg, commit) {\n  commit('setRemoteCanvas', msg);\n}\n\nvar webSocketPlugin = function webSocketPlugin(_ref) {\n  var state = _ref.state,\n      commit = _ref.commit,\n      dispatch = _ref.dispatch;\n\n  rootState.socket.emit = function (type, data) {\n    rootState.socket.send(JSON.stringify({\n      type: type,\n      data: data\n    }));\n  };\n\n  rootState.socket.addEventListener('open', function (evt) {\n    util.log('The websocket connection has been opened successfully.');\n    setInterval(function () {\n      dispatch('ping');\n    }, 53000);\n  });\n  rootState.socket.addEventListener('close', function (evt) {\n    util.log(\"The websocket connection has been closed with error code \".concat(evt.code, \": \").concat(evt.reason));\n  });\n  rootState.socket.addEventListener('error', function (evt) {\n    util.trace(evt);\n  });\n  rootState.socket.addEventListener('message', function (evt) {\n    var msg = JSON.parse(evt.data);\n\n    switch (msg.type) {\n      case 'new-ice-candidate':\n        handleNewIceCandidate(msg.data, dispatch);\n        break;\n\n      case 'video-offer':\n        handleVideoOffer(msg.data, dispatch);\n        break;\n\n      case 'video-answer':\n        handleVideoAnswer(msg.data, dispatch);\n        break;\n\n      case 'hang-up':\n        handleHangUp(state, commit);\n        break;\n\n      case 'peer-matched':\n        handlePeerMatched(dispatch);\n        break;\n\n      case 'message':\n        handleMessage(msg.data, commit);\n        break;\n\n      case 'canvas':\n        handleCanvas(msg.data, commit);\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default process.env.NODE_ENV !== 'production' ? [createLogger(), webSocketPlugin] : [webSocketPlugin];",{"version":3,"sources":["/Users/Mac/Downloads/Omeclone/src/store/plugins.js"],"names":["createLogger","rootState","util","handleNewIceCandidate","msg","dispatch","catch","err","trace","name","message","handleVideoOffer","then","answer","handleVideoAnswer","handleHangUp","state","commit","localStream","handlePeerMatched","offer","handleMessage","handleCanvas","webSocketPlugin","socket","emit","type","data","send","JSON","stringify","addEventListener","evt","log","setInterval","code","reason","parse","process","env","NODE_ENV"],"mappings":"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","sourcesContent":["import createLogger from 'vuex/dist/logger'\nimport rootState from './state'\nimport util from '../util'\n\n/**\n * Signaling messages: these messages are used to trade WebRTC\n * signaling information during negotiations leading up to a video call.\n */\n\n/* A new ICE candidate has been received */\nfunction handleNewIceCandidate (msg, dispatch) {\n  dispatch('addIceCandidate', msg)\n    .catch((err) => util.trace(`Error ${err.name}: ${err.message}`))\n}\n\n/* Invitation and offer to chat */\nfunction handleVideoOffer (msg, dispatch) {\n  dispatch('setRemoteDescription', msg)\n    .then(() => dispatch('createAnswer'))\n    .then((answer) => dispatch('setLocalDescription', answer))\n    .then(() => dispatch('sendAnswerToPeer'))\n    .catch((err) => util.trace(`Error ${err.name}: ${err.message}`))\n}\n\n/* Callee has answered our offer */\nfunction handleVideoAnswer (msg, dispatch) {\n  dispatch('setRemoteDescription', msg)\n    .catch((err) => util.trace(`Error ${err.name}: ${err.message}`))\n}\n\n/* The other peer has hung up the call */\nfunction handleHangUp (state, commit) {\n  commit('closePeerConnection')\n  commit('createPeerConnection')\n  commit('addLocalStream', state.localStream)\n}\n\n/* A remote peer has been found and matched */\nfunction handlePeerMatched (dispatch) {\n  dispatch('createOffer')\n    .then((offer) => dispatch('setLocalDescription', offer))\n    .then(() => dispatch('sendOfferToPeer'))\n    .catch((err) => util.trace(`Error ${err.name}: ${err.message}`))\n}\n\n/**\n * Chatting messages: these messages are used to communicate with the remote peer.\n */\n\nfunction handleMessage (msg, commit) {\n  commit('addMessage', msg)\n}\n\nfunction handleCanvas (msg, commit) {\n  commit('setRemoteCanvas', msg)\n}\n\nconst webSocketPlugin = ({ state, commit, dispatch }) => {\n  rootState.socket.emit = (type, data) => {\n    rootState.socket.send(JSON.stringify({ type, data }))\n  }\n\n  rootState.socket.addEventListener('open', (evt) => {\n    util.log('The websocket connection has been opened successfully.')\n\n    setInterval(() => {\n      dispatch('ping')\n    }, 53000)\n  })\n\n  rootState.socket.addEventListener('close', (evt) => {\n    util.log(`The websocket connection has been closed with error code ${evt.code}: ${evt.reason}`)\n  })\n\n  rootState.socket.addEventListener('error', (evt) => {\n    util.trace(evt)\n  })\n\n  rootState.socket.addEventListener('message', (evt) => {\n    const msg = JSON.parse(evt.data)\n\n    switch (msg.type) {\n      case 'new-ice-candidate':\n        handleNewIceCandidate(msg.data, dispatch)\n        break\n      case 'video-offer':\n        handleVideoOffer(msg.data, dispatch)\n        break\n      case 'video-answer':\n        handleVideoAnswer(msg.data, dispatch)\n        break\n      case 'hang-up':\n        handleHangUp(state, commit)\n        break\n      case 'peer-matched':\n        handlePeerMatched(dispatch)\n        break\n      case 'message':\n        handleMessage(msg.data, commit)\n        break\n      case 'canvas':\n        handleCanvas(msg.data, commit)\n        break\n      default:\n        break\n    }\n  })\n}\n\nexport default process.env.NODE_ENV !== 'production'\n  ? [createLogger(), webSocketPlugin]\n  : [webSocketPlugin]\n"]}]}