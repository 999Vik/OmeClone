{"remainingRequest":"/Users/Mac/Downloads/chatroulette-master/node_modules/babel-loader/lib/index.js!/Users/Mac/Downloads/chatroulette-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Mac/Downloads/chatroulette-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Mac/Downloads/chatroulette-master/src/components/Canvas.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Mac/Downloads/chatroulette-master/src/components/Canvas.vue","mtime":1570804640000},{"path":"/Users/Mac/Downloads/chatroulette-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Mac/Downloads/chatroulette-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Mac/Downloads/chatroulette-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Mac/Downloads/chatroulette-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/Mac/Downloads/chatroulette-master/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nexport default {\n  name: 'chat-canvas',\n  data: function data() {\n    return {\n      prev: {\n        x: 0,\n        y: 0\n      },\n      curr: {\n        x: 0,\n        y: 0\n      },\n      ctx: null,\n      strokeStyle: 'black',\n      lineWidth: 1,\n      style: {\n        width: 0,\n        height: 0\n      }\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapState(['remoteCanvas', 'isCanvasShown', 'socket', 'connectionState'])), {}, {\n    parentStyle: function parentStyle() {\n      return {\n        width: this.style.width + 'px',\n        height: this.style.height + 'px'\n      };\n    }\n  }),\n  watch: {\n    remoteCanvas: function remoteCanvas(payload) {\n      var ctx = this.$refs.remoteCanvas.getContext('2d');\n      ctx.beginPath();\n      ctx.moveTo(payload.prev.x, payload.prev.y);\n      ctx.lineTo(payload.curr.x, payload.curr.y);\n      ctx.lineWidth = payload.lineWidth;\n      ctx.strokeStyle = payload.strokeStyle;\n      ctx.stroke();\n      ctx.closePath();\n    },\n    connectionState: function connectionState(state) {\n      if (state === 'closed') {\n        this.clear();\n      }\n    }\n  },\n  mounted: function mounted() {\n    var sibling = this.$refs.canvas.previousElementSibling;\n    this.style.width = sibling.offsetWidth;\n    this.style.height = sibling.offsetHeight;\n    this.ctx = this.$refs.localCanvas.getContext('2d');\n  },\n  methods: {\n    startPaint: function startPaint(event) {\n      this.curr.x = event.offsetX;\n      this.curr.y = event.offsetY;\n      this.ctx.beginPath();\n      event.target.addEventListener('mousemove', this.paint);\n    },\n    stopPaint: function stopPaint(event) {\n      this.ctx.closePath();\n      event.target.removeEventListener('mousemove', this.paint);\n    },\n    paint: function paint(event) {\n      event.stopPropagation();\n      this.prev.x = this.curr.x;\n      this.prev.y = this.curr.y;\n      this.curr.x = event.offsetX;\n      this.curr.y = event.offsetY;\n      this.ctx.moveTo(this.prev.x, this.prev.y);\n      this.ctx.lineTo(this.curr.x, this.curr.y);\n      this.ctx.lineWidth = this.lineWidth;\n      this.ctx.strokeStyle = this.strokeStyle;\n      this.ctx.stroke();\n\n      if (this.connectionState === 'open') {\n        this.sync();\n      }\n    },\n    sync: function sync() {\n      this.socket.emit('canvas', this.$data);\n    },\n    setStrokeStyle: function setStrokeStyle(event) {\n      this.strokeStyle = event.target.value;\n    },\n    setLineWidth: function setLineWidth(event) {\n      this.lineWidth = event.target.value;\n    },\n    clear: function clear(event) {\n      var remoteCtx = this.$refs.remoteCanvas.getContext('2d');\n      remoteCtx.clearRect(0, 0, this.remoteCanvas.style.width, this.remoteCanvas.style.height);\n      this.ctx.clearRect(0, 0, this.style.width, this.style.height);\n    },\n    save: function save(event) {\n      var canvas = document.createElement('canvas');\n      canvas.width = this.style.width;\n      canvas.height = this.style.height;\n      var ctx = canvas.getContext('2d');\n      ctx.drawImage(this.$refs.remoteCanvas, 0, 0);\n      ctx.drawImage(this.$refs.localCanvas, 0, 0);\n      var dataURL = canvas.toDataURL('image/png');\n      var link = document.createElement('a');\n      link.download = 'chatroulette.png';\n      link.href = dataURL;\n      link.click();\n      canvas = link = null;\n    }\n  }\n};",{"version":3,"sources":["Canvas.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"canvas\" v-show=\"isCanvasShown\" ref=\"canvas\" :style=\"parentStyle\">\n    <canvas\n      class=\"remote-canvas\"\n      ref=\"remoteCanvas\"\n      :width=\"style.width\"\n      :height=\"style.height\">\n    </canvas>\n    <canvas\n      class=\"local-canvas\"\n      ref=\"localCanvas\"\n      @mousedown.stop=\"startPaint\"\n      @mouseup.stop=\"stopPaint\"\n      @mouseout.stop=\"stopPaint\"\n      :width=\"style.width\"\n      :height=\"style.height\">\n    </canvas>\n\n    <span class=\"canvas-tool\">\n      <input type=\"color\" name=\"color\" @change=\"setStrokeStyle\">\n      <input type=\"range\" name=\"range\" min=\"1\" max=\"10\" value=\"1\" @change=\"setLineWidth\">\n      <input type=\"button\" name=\"save\" value=\"Save\" @click=\"save\">\n      <input type=\"button\" name=\"clear\" value=\"Clear\" @click=\"clear\">\n    </span>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\n\nexport default {\n  name: 'chat-canvas',\n\n  data () {\n    return {\n      prev: { x: 0, y: 0 },\n      curr: { x: 0, y: 0 },\n      ctx: null,\n      strokeStyle: 'black',\n      lineWidth: 1,\n      style: { width: 0, height: 0 }\n    }\n  },\n\n  computed: {\n    ...mapState(['remoteCanvas', 'isCanvasShown', 'socket', 'connectionState']),\n    parentStyle () {\n      return {\n        width: this.style.width + 'px',\n        height: this.style.height + 'px'\n      }\n    }\n  },\n\n  watch: {\n    remoteCanvas (payload) {\n      let ctx = this.$refs.remoteCanvas.getContext('2d')\n      ctx.beginPath()\n      ctx.moveTo(payload.prev.x, payload.prev.y)\n      ctx.lineTo(payload.curr.x, payload.curr.y)\n      ctx.lineWidth = payload.lineWidth\n      ctx.strokeStyle = payload.strokeStyle\n      ctx.stroke()\n      ctx.closePath()\n    },\n    connectionState (state) {\n      if (state === 'closed') {\n        this.clear()\n      }\n    }\n  },\n\n  mounted () {\n    let sibling = this.$refs.canvas.previousElementSibling\n    this.style.width = sibling.offsetWidth\n    this.style.height = sibling.offsetHeight\n    this.ctx = this.$refs.localCanvas.getContext('2d')\n  },\n\n  methods: {\n    startPaint (event) {\n      this.curr.x = event.offsetX\n      this.curr.y = event.offsetY\n      this.ctx.beginPath()\n      event.target.addEventListener('mousemove', this.paint)\n    },\n    stopPaint (event) {\n      this.ctx.closePath()\n      event.target.removeEventListener('mousemove', this.paint)\n    },\n    paint (event) {\n      event.stopPropagation()\n      this.prev.x = this.curr.x\n      this.prev.y = this.curr.y\n      this.curr.x = event.offsetX\n      this.curr.y = event.offsetY\n      this.ctx.moveTo(this.prev.x, this.prev.y)\n      this.ctx.lineTo(this.curr.x, this.curr.y)\n      this.ctx.lineWidth = this.lineWidth\n      this.ctx.strokeStyle = this.strokeStyle\n      this.ctx.stroke()\n      if (this.connectionState === 'open') {\n        this.sync()\n      }\n    },\n    sync () {\n      this.socket.emit('canvas', this.$data)\n    },\n    setStrokeStyle (event) {\n      this.strokeStyle = event.target.value\n    },\n    setLineWidth (event) {\n      this.lineWidth = event.target.value\n    },\n    clear (event) {\n      let remoteCtx = this.$refs.remoteCanvas.getContext('2d')\n      remoteCtx.clearRect(0, 0, this.remoteCanvas.style.width, this.remoteCanvas.style.height)\n      this.ctx.clearRect(0, 0, this.style.width, this.style.height)\n    },\n    save (event) {\n      let canvas = document.createElement('canvas')\n      canvas.width = this.style.width\n      canvas.height = this.style.height\n      let ctx = canvas.getContext('2d')\n      ctx.drawImage(this.$refs.remoteCanvas, 0, 0)\n      ctx.drawImage(this.$refs.localCanvas, 0, 0)\n      let dataURL = canvas.toDataURL('image/png')\n      let link = document.createElement('a')\n      link.download = 'chatroulette.png'\n      link.href = dataURL\n      link.click()\n      canvas = link = null\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n#canvas {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n\n  .local-canvas, .remote-canvas {\n    position: absolute;\n    top: 0;\n    left: 0;\n    cursor: default;\n  }\n\n  .canvas-tool {\n    position: absolute;\n    bottom: -33px;\n    left: 100px;\n\n    input {\n      vertical-align: middle;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/components"}]}